<Page x:Class="RSFJ.View.AccountPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:utilities="clr-namespace:RSFJ.ViewModels.Utilities"
      xmlns:m="clr-namespace:RSFJ.Model"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="768" d:DesignWidth="1024"
      Title="AccountPage">

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <utilities:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <utilities:RojmelEntryTypeToVisibilityConverter x:Key="RojmelEntryTypeToVisibilityConverter" />
        <utilities:RojmelEntryViewModelTypeToVisibilityConverter x:Key="RojmelEntryViewModelTypeToVisibilityConverter" />
        <utilities:RojmelEntryTypeToHeadingConverter x:Key="RojmelEntryTypeToHeadingConverter" />
    </Page.Resources>

    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Background="SlateGray">
            <TreeView ItemsSource="{Binding Path=GroupedAccounts}" SelectedItemChanged="TreeView_SelectedItemChanged" 
                      Background="SlateGray" Margin="0 0 0 100">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Accounts}">
                        <Border CornerRadius="5" Padding="5 2">
                            <TextBlock Text="{Binding}" Foreground="Black" />
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.ItemContainerStyle>

                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="IsExpanded" Value="True"/>
                        <Setter Property="FontSize" Value="12pt" />
                        <Setter Property="Margin" Value="5 0" />
                        <Setter Property="Padding" Value="5 2" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </Grid>

        <Grid Grid.Column="1" Background="LightSteelBlue">
            <StackPanel Margin="5 10" Visibility="{Binding Path=SelectedAccount, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}">
                <StackPanel.Resources>
                    <Style x:Key="KeyStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="FontSize" Value="14pt" />
                    </Style>
                    <Style x:Key="ValueStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="DimGray" />
                        <Setter Property="FontSize" Value="12pt" />
                    </Style>
                    <Style x:Key="EditableValueStyle" TargetType="TextBox">
                        <Setter Property="TextWrapping" Value="Wrap" />
                        <Setter Property="Padding" Value="0 5" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="BorderBrush" Value="DimGray" />
                        <Setter Property="BorderThickness" Value="0 0 0 1" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="DimGray" />
                        <Setter Property="FontSize" Value="12pt" />
                    </Style>
                </StackPanel.Resources>
                <Border Padding="5" Background="DimGray" CornerRadius="10">
                    <TextBlock Text="{Binding Path=SelectedAccount.Name}" TextAlignment="Center" Foreground="White" FontSize="15pt" />
                </Border>
                <StackPanel Margin="10">
                    <TextBlock Text="{Binding Path=SelectedAccount.Type}" Style="{StaticResource KeyStyle}" Foreground="Navy" />
                </StackPanel>
                <StackPanel Margin="10">
                    <TextBlock Text="Fine due:" FontSize="12pt" Style="{StaticResource KeyStyle}" />
                    <TextBlock Text="{Binding Path=SelectedAccount.FineInGold, StringFormat=N2}" Style="{StaticResource ValueStyle}" />
                </StackPanel>
                <StackPanel Margin="10">
                    <TextBlock Text="Money due:" FontSize="12pt" Style="{StaticResource KeyStyle}" />
                    <TextBlock Text="{Binding Path=SelectedAccount.FineInMoney, StringFormat=N2}" Style="{StaticResource ValueStyle}" />
                </StackPanel>
                <StackPanel Margin="10">
                    <TextBlock Text="Phone:" FontSize="12pt" Style="{StaticResource KeyStyle}" />
                    <TextBox Text="{Binding Path=SelectedAccount.Phone}" Style="{StaticResource EditableValueStyle}" MaxLength="10" />
                </StackPanel>
                <StackPanel Margin="10">
                    <TextBlock Text="Note:" FontSize="12pt" Style="{StaticResource KeyStyle}" />
                    <TextBox Text="{Binding Path=SelectedAccount.Note}" AcceptsReturn="True" MaxLines="10" MaxLength="100" TextWrapping="WrapWithOverflow" Style="{StaticResource EditableValueStyle}" />
                </StackPanel>
            </StackPanel>
        </Grid>
        
        <Border Grid.Column="2" BorderBrush="SlateGray" BorderThickness="1 0" Visibility="{Binding Path=SelectedAccount, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                    <Style x:Key="CenteredTextBlock" TargetType="TextBlock">
                        <Setter Property="TextAlignment" Value="Center" />
                    </Style>
                    <DataTemplate x:Key="ColumnSeperator">
                        <Rectangle IsHitTestVisible="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="DarkSlateGray" />
                    </DataTemplate>
                    <Style x:Key="SeperatorCellStyle" TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                    <Style x:Key="DefaultCellStyle" TargetType="{x:Type DataGridCell}">
                        <Setter Property="Foreground" Value="DarkSlateGray" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="LightCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}">
                        <Setter Property="FontWeight" Value="Light" />
                    </Style>
                    <Style x:Key="ResultCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}">
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                    <Style x:Key="AggregateCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ResultCellStyle}">
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="Foreground" Value="Black" />
                    </Style>
                </Grid.Resources>

                <DataGrid ItemsSource="{Binding Path=HistoryEntries}" SelectedItem="{Binding Path=SelectedEntry, UpdateSourceTrigger=PropertyChanged}"
                          IsReadOnly="True" GridLinesVisibility="All" AutoGenerateColumns="False" VerticalAlignment="Top">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="HeadingParam1">
                            <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=0}" />
                        </DataTemplate>
                        <DataTemplate x:Key="HeadingParam2">
                            <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=1}" />
                        </DataTemplate>
                        <DataTemplate x:Key="HeadingResult">
                            <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=2}" />
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="Auto" Binding="{Binding Path=Id}" Header="Id" CellStyle="{StaticResource DefaultCellStyle}" ElementStyle="{StaticResource CenteredTextBlock}" />
                        <DataGridTextColumn Width="1.2*" Binding="{Binding Path=Date, StringFormat={}{0:dd MMMM\, yyyy}}" Header="Date" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTextColumn Width="1.5*" Binding="{Binding Path=StockItem}" Header="Item" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTextColumn Width="1.5*" Binding="{Binding Path=Remaining, StringFormat={}{0:#.##}}" Header="Remaining" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTemplateColumn MinWidth="2" MaxWidth="2" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                        <DataGridTextColumn Width="1*" Binding="{Binding Path=PartialPaymentInterval, StringFormat=\{0\}  days}" Header="Interval" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=TotalPaymentDueDays, StringFormat=\{0\}  days}" Header="Payback in" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTemplateColumn MinWidth="2" MaxWidth="2" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                        <DataGridTextColumn Width="1*" Binding="{Binding Path=LParam1, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam1}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=LParam2, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam2}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=LResult, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingResult}" CellStyle="{StaticResource ResultCellStyle}" />
                        <DataGridTemplateColumn MinWidth="2" MaxWidth="2" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                        <DataGridTextColumn Width="1*" Binding="{Binding Path=RParam1, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam1}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=RParam2, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam2}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=RResult, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingResult}" CellStyle="{StaticResource ResultCellStyle}" />
                    </DataGrid.Columns>
                </DataGrid>
                <DataGrid Grid.Row="2" ItemsSource="{Binding Path=SelectedEntry.PaybackEntries, UpdateSourceTrigger=PropertyChanged}" 
                          IsReadOnly="True" GridLinesVisibility="All" AutoGenerateColumns="False"
                          CanUserSortColumns="False" CanUserResizeColumns="False" CanUserReorderColumns="False"
                          BorderThickness="0 3 0 0" BorderBrush="SlateGray" VerticalAlignment="Top">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="HeadingParam1">
                            <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=0}" />
                        </DataTemplate>
                        <DataTemplate x:Key="HeadingParam2">
                            <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=1}" />
                        </DataTemplate>
                        <DataTemplate x:Key="HeadingResult">
                            <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=2}" />
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="Auto" Binding="{Binding Path=Id}" Header="Id" CellStyle="{StaticResource DefaultCellStyle}" ElementStyle="{StaticResource CenteredTextBlock}" />
                        <DataGridTextColumn Width="1.2*" Binding="{Binding Path=Date, StringFormat={}{0:dd MMMM\, yyyy}}" Header="Date" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTextColumn Width="1.5*" Binding="{Binding Path=StockItem}" Header="Item" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTemplateColumn MinWidth="2" MaxWidth="2" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                        <DataGridTextColumn Width="1*" Binding="{Binding Path=PartialPaymentLate, StringFormat=\{0\}  days, TargetNullValue=In-Time}" Header="Delay" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=FullPaymentLate, StringFormat=\{0\}  days, TargetNullValue=In-Time}" Header="Late" CellStyle="{StaticResource DefaultCellStyle}" />
                        <DataGridTemplateColumn MinWidth="2" MaxWidth="2" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                        <DataGridTextColumn Width="1*" Binding="{Binding Path=LParam1, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam1}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=LParam2, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam2}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=LResult, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingResult}" CellStyle="{StaticResource ResultCellStyle}" />
                        <DataGridTemplateColumn MinWidth="2" MaxWidth="2" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                        <DataGridTextColumn Width="1*" Binding="{Binding Path=RParam1, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam1}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=RParam2, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingParam2}" CellStyle="{StaticResource LightCellStyle}" />
                        <DataGridTextColumn Width="1*" Binding="{Binding Path=RResult, StringFormat={}{0:#.##}}" HeaderTemplate="{StaticResource HeadingResult}" CellStyle="{StaticResource ResultCellStyle}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>
    </Grid>
</Page>

<Page x:Class="RSFJ.View.RojmelPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:RSFJ.View"
      xmlns:vm="clr-namespace:RSFJ.ViewModels"
      xmlns:m="clr-namespace:RSFJ.Model"
      xmlns:utilities="clr-namespace:RSFJ.ViewModels.Utilities"
      xmlns:services="clr-namespace:RSFJ.Services"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      mc:Ignorable="d" 
      d:DesignHeight="768" d:DesignWidth="1024"
      Background="White"
      Title="RojmelPage">

    <Page.DataContext>
        <vm:RojmelPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <utilities:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <utilities:RojmelEntryTypeToVisibilityConverter x:Key="RojmelEntryTypeToVisibilityConverter" />
        <utilities:RojmelEntryViewModelTypeToVisibilityConverter x:Key="RojmelEntryViewModelTypeToVisibilityConverter" />
        <utilities:RojmelEntryTypeToHeadingConverter x:Key="RojmelEntryTypeToHeadingConverter" />
        <utilities:LendingEntryVisibilityConverter x:Key="LendingEntryVisibilityConverter" />
        <utilities:CustomerEntryVisibilityConverter x:Key="CustomerEntryVisibilityConverter" />
    </Page.Resources>

    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <FrameworkElement x:Name="dummyElement" Visibility="Collapsed"/>

        <Border Grid.ColumnSpan="2" Background="LightSteelBlue" BorderBrush="SteelBlue" BorderThickness="0 0 0 1">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="ComboBox">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Margin" Value="5 0 20 0" />
                        <Setter Property="MinWidth" Value="140" />
                        <Setter Property="FontSize" Value="11pt" />
                        <Setter Property="Foreground" Value="DarkSlateGray" />
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="11pt" />
                        <Setter Property="Foreground" Value="DimGray" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="5 0 0 0" />
                    </Style>
                    <Style TargetType="DatePicker">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Margin" Value="5 0" />
                        <Setter Property="MinWidth" Value="140" />
                        <Setter Property="FontSize" Value="11pt" />
                        <Setter Property="Foreground" Value="DarkSlateGray" />
                        <Setter Property="Background" Value="White" />
                    </Style>
                </StackPanel.Resources>

                <TextBlock Text="Account: " />
                <ComboBox SelectedItem="{Binding Path=FilterAccount, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=DataContext.Accounts, Source={x:Static services:DataContextService.Instance}}" />

                <TextBlock Text="Item: " />
                <ComboBox SelectedItem="{Binding Path=FilterStockItem, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=DataContext.StockItems, Source={x:Static services:DataContextService.Instance}}" />

                <TextBlock Text="Between: " />
                <DatePicker SelectedDate="{Binding Path=FilterStartDate, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Text="&amp;" Margin="0" />
                <DatePicker SelectedDate="{Binding Path=FilterEndDate, UpdateSourceTrigger=PropertyChanged}" />

                <Button Command="{Binding Path=ResetFiltersCommand}" Content="Reset" VerticalAlignment="Center" Cursor="Hand" Height="30" Width="60" Margin="10 0" />
            </StackPanel>
        </Border>

        <DataGrid x:Name="EntriesDataGrid" Grid.Row="1"
                      HorizontalAlignment="Stretch" VerticalAlignment="Top"
                      ItemsSource="{Binding Path=EntriesViewSource.View}"
                      SelectedItem="{Binding Path=SelectedEntry, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RojmelEntryViewModelTypeToVisibilityConverter}}"
                      AutoGenerateColumns="False" CanUserAddRows="True" GridLinesVisibility="All"
                      BorderBrush="Gray" BorderThickness="0 0 0 2" CanUserDeleteRows="True" CanUserResizeColumns="False"
                      RowEditEnding="DataGrid_RowEditEnding"
                      d:DataContext="{Binding Source={d:DesignInstance Type=vm:RojmelEntryViewModel, CreateList=False}}">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <Style x:Key="CenteredTextBlock" TargetType="TextBlock">
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
                <DataTemplate x:Key="HeadingParam1">
                    <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=0}" />
                </DataTemplate>
                <DataTemplate x:Key="HeadingParam2">
                    <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=1}" />
                </DataTemplate>
                <DataTemplate x:Key="HeadingResult">
                    <TextBlock Text="{Binding Path=SelectedItem.Type, FallbackValue=-, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource RojmelEntryTypeToHeadingConverter}, ConverterParameter=2}" />
                </DataTemplate>
                <DataTemplate x:Key="ColumnSeperator">
                    <Rectangle IsHitTestVisible="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="DarkSlateGray" />
                </DataTemplate>
                <Style x:Key="SeperatorCellStyle" TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderBrush" Value="DarkSlateGray" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Focusable" Value="False" />
                </Style>
                <Style x:Key="DefaultCellStyle" TargetType="{x:Type DataGridCell}">
                    <Setter Property="Foreground" Value="DarkSlateGray" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="LightCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}">
                    <Setter Property="FontWeight" Value="Light" />
                </Style>
                <Style x:Key="ResultCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}">
                    <Setter Property="FontWeight" Value="SemiBold" />
                    <Setter Property="Focusable" Value="False" />
                </Style>
                <Style x:Key="AggregateCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ResultCellStyle}">
                    <Setter Property="FontWeight" Value="SemiBold" />
                    <Setter Property="Foreground" Value="Black" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlock}" CellStyle="{StaticResource DefaultCellStyle}" Header="T-ID" IsReadOnly="True" Binding="{Binding Path=Id}" Width="Auto" />
                <DataGridTemplateColumn CellStyle="{StaticResource DefaultCellStyle}" Header="Date" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding Path=Date, UpdateSourceTrigger=LostFocus}" SelectedDateFormat="Short" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridComboBoxColumn Header="Account" SelectedItemBinding="{Binding Path=Account, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={x:Static vm:RojmelEntryViewModel.Accounts}}" Width="2*" />

                <DataGridComboBoxColumn Header="Item" SelectedItemBinding="{Binding Path=StockItem, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={x:Static vm:RojmelEntryViewModel.StockItems}}" Width="2*" />

                <DataGridTemplateColumn MinWidth="1" MaxWidth="1" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                <DataGridTextColumn CellStyle="{StaticResource LightCellStyle}" HeaderTemplate="{StaticResource HeadingParam1}" Binding="{Binding Path=LParam1, StringFormat={}{0:#.##}, TargetNullValue={x:Static system:String.Empty}, UpdateSourceTrigger=LostFocus}" Width="*" />
                <DataGridTextColumn CellStyle="{StaticResource LightCellStyle}" HeaderTemplate="{StaticResource HeadingParam2}" Binding="{Binding Path=LParam2, StringFormat={}{0:#.##}, TargetNullValue={x:Static system:String.Empty}, UpdateSourceTrigger=LostFocus}" Width="*" />
                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlock}" CellStyle="{StaticResource ResultCellStyle}" HeaderTemplate="{StaticResource HeadingResult}" Binding="{Binding Path=LResult, StringFormat={}{0:0.##}, TargetNullValue={x:Static system:String.Empty}, UpdateSourceTrigger=LostFocus}" Width="*" IsReadOnly="True" />

                <DataGridTemplateColumn MinWidth="1" MaxWidth="1" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                <DataGridTextColumn CellStyle="{StaticResource LightCellStyle}" HeaderTemplate="{StaticResource HeadingParam1}" Binding="{Binding Path=RParam1, StringFormat={}{0:#.##}, TargetNullValue={x:Static system:String.Empty}, UpdateSourceTrigger=LostFocus}" Width="*" />
                <DataGridTextColumn CellStyle="{StaticResource LightCellStyle}" HeaderTemplate="{StaticResource HeadingParam2}" Binding="{Binding Path=RParam2, StringFormat={}{0:#.##}, TargetNullValue={x:Static system:String.Empty}, UpdateSourceTrigger=LostFocus}" Width="*" />
                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlock}" CellStyle="{StaticResource ResultCellStyle}" HeaderTemplate="{StaticResource HeadingResult}" Binding="{Binding Path=RResult, StringFormat={}{0:0.##}, TargetNullValue={x:Static system:String.Empty}, UpdateSourceTrigger=LostFocus}" Width="*" IsReadOnly="True" />

                <DataGridTemplateColumn MinWidth="1" MaxWidth="1" IsReadOnly="True" CellStyle="{StaticResource SeperatorCellStyle}" />

                <DataGridTextColumn Visibility="{Binding Source={x:Reference dummyElement}, Path=DataContext.ShowAggregateFineBalance, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" ElementStyle="{StaticResource CenteredTextBlock}" CellStyle="{StaticResource AggregateCellStyle}" Header="Fine" Binding="{Binding Path=AccountFineBalance, TargetNullValue=..., StringFormat={}{0:0.##}, UpdateSourceTrigger=PropertyChanged}" Width="1.3*" IsReadOnly="True" />
                <DataGridTextColumn Visibility="{Binding Source={x:Reference dummyElement}, Path=DataContext.ShowAggregateMoneyBalance, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" ElementStyle="{StaticResource CenteredTextBlock}" CellStyle="{StaticResource AggregateCellStyle}" Header="Due" Binding="{Binding Path=AccountMoneyBalance, TargetNullValue=..., StringFormat={}{0:0.##}, UpdateSourceTrigger=PropertyChanged}" Width="1.3*" IsReadOnly="True" />
                <DataGridTextColumn Visibility="{Binding Source={x:Reference dummyElement}, Path=DataContext.ShowAggregateStockBalance, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" ElementStyle="{StaticResource CenteredTextBlock}" CellStyle="{StaticResource AggregateCellStyle}" Header="In Stock" Binding="{Binding Path=StockItemBalance, TargetNullValue=..., StringFormat={}{0:0.##}, UpdateSourceTrigger=PropertyChanged}" Width="1.3*" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Column="1" Grid.Row="1" DataContext="{Binding Path=SelectedEntry}" Width="300">
            <Border Background="WhiteSmoke" BorderBrush="DarkSlateBlue" BorderThickness="1 0 0 0" Padding="0 10">
                <Grid Visibility="{Binding ElementName=ViewModel, Path=SelectedEntry, Converter={StaticResource NullToVisibilityConverter}}">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="DarkSlateGray" />
                                <Setter Property="FontSize" Value="12pt" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Foreground" Value="Gray" />
                                <Setter Property="BorderThickness" Value="0 0 0 1" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="FontSize" Value="13pt" />
                                <Setter Property="Margin" Value="0 5" />
                            </Style>
                            <Style TargetType="DatePicker">
                                <Setter Property="Foreground" Value="Gray" />
                                <Setter Property="BorderThickness" Value="0 0 0 1" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="FontSize" Value="14pt" />
                                <Setter Property="Margin" Value="0 5" />
                            </Style>
                        </StackPanel.Resources>

                        <StackPanel Margin="10" Visibility="{Binding Path=Account, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}">
                            <Border Padding="5" BorderBrush="LightSlateGray" BorderThickness="0 0 0 1">
                                <TextBlock Text="{Binding Path=Account.Name}" FontSize="14pt" />
                            </Border>
                            <Grid Margin="10 2">
                                <TextBlock Text="Fine due:" FontSize="12pt" Foreground="SlateGray" />
                                <TextBlock Text="{Binding Path=Account.FineInGold}" FontSize="12pt" HorizontalAlignment="Right" />
                            </Grid>
                            <Grid Margin="10 2">
                                <TextBlock Text="Money due:" FontSize="12pt" Foreground="SlateGray" />
                                <TextBlock Text="{Binding Path=Account.FineInMoney}" FontSize="12pt" HorizontalAlignment="Right" />
                            </Grid>
                        </StackPanel>
                        <StackPanel Margin="10" Visibility="{Binding Path=StockItem, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}">
                            <Border Padding="5" BorderBrush="LightSlateGray" BorderThickness="0 0 0 1">
                                <TextBlock Text="{Binding Path=StockItem.Name}" FontSize="14pt" />
                            </Border>
                            <Grid Margin="10 2">
                                <TextBlock Text="In stock:" FontSize="12pt" Foreground="SlateGray" />
                                <TextBlock Text="{Binding Path=StockItem.InStock}" FontSize="12pt" HorizontalAlignment="Right" />
                            </Grid>
                            <Grid Margin="10 2">
                                <TextBlock Text="Equivalent gold:" FontSize="12pt" Foreground="SlateGray" />
                                <TextBlock Text="{Binding Path=StockItem.EquivalentGold}" FontSize="12pt" HorizontalAlignment="Right" />
                            </Grid>
                        </StackPanel>

                        <Separator Margin="0 20 0 0" Background="DimGray" />

                        <StackPanel Margin="10" Visibility="{Binding UpdateSourceTrigger=PropertyChanged, Converter={StaticResource LendingEntryVisibilityConverter}}">
                            <Grid Margin="0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <TextBlock Text="Payment Interval: " />
                                <TextBox Grid.Column="1" Text="{Binding Path=PartialPaymentInterval, UpdateSourceTrigger=PropertyChanged}" FontWeight="SemiBold" TextAlignment="Center" />

                                <TextBlock Grid.Row="1" Text="Payment before: " />
                                <DatePicker Grid.Row="1" Grid.Column="1" SelectedDate="{Binding Path=TotalPaymentDueDate, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </StackPanel>
                        <StackPanel Margin="10" Visibility="{Binding Path=Account.Type, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CustomerEntryVisibilityConverter}}">
                            <Grid Margin="0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Controls:ToggleSwitch Grid.ColumnSpan="2" Content="Labour in amount?" IsChecked="{Binding Path=IsLabourAsAmount, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock Grid.Row="1" Text="Labour: " />
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=Labour, TargetNullValue={x:Static system:String.Empty}}" FontWeight="SemiBold" TextAlignment="Center" />

                                <TextBlock Grid.Row="2" Text="Waste: " />
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Path=Waste, TargetNullValue={x:Static system:String.Empty}}" FontWeight="SemiBold" TextAlignment="Center" />
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Page>
